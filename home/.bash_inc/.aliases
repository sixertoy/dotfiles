#!/usr/bin/env bash

# --------------------------------
#
# Aliases
# https://github.com/mathiasbynens/dotfiles/blob/master/.aliases

# Remove with confirmation
alias rm="rm -i"

alias rmrf="rm -rf"

# Show Disc Usage informations
alias lds="df -h"

# Always use color output for `ls`
alias ls="command ls ${colorflag}"

# List all files and hidden files
alias ll='ls -laF ${colorflag}'

# Table all files and hidden files
alias lw='ls -AF ${colorflag}'

# List all files in a tree
alias ltree='tree -a -L 1'

# List only directories
alias dir="ls -lF ${colorflag} | grep --color=never '^d'"

# Always enable colored `grep` output
# Note: `GREP_OPTIONS="--color=auto"` is deprecated, hence the alias usage.
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

# IP addresses
alias ip="dig +short myip.opendns.com @resolver1.opendns.com"
alias localip="ipconfig getifaddr en0"
alias ips="ifconfig -a | grep -o 'inet6\? \(addr:\)\?\s\?\(\(\([0-9]\+\.\)\{3\}[0-9]\+\)\|[a-fA-F0-9:]\+\)' | awk '{ sub(/inet6? (addr:)? ?/, \"\"); print }'"

# View HTTP traffic
alias httpdump="sudo tcpdump -A -s0 -ien0 port 80"

# Recursively delete `.DS_Store` files
alias cleanup="find . -type f -name '*.DS_Store' -ls -delete"

# Show dotfiles in Finder
alias showdot='defaults write com.apple.finder AppleShowAllFiles -bool true && killall Finder'

# Hide dotfiles in Finder
alias hidedot='defaults write com.apple.finder AppleShowAllFiles -bool false && killall Finder'

# Show all desktop icons (useful when presenting)
alias showdesktop="defaults write com.apple.finder CreateDesktop -bool true && killall Finder"

# Hide all desktop icons (useful when presenting)
alias hidedesktop="defaults write com.apple.finder CreateDesktop -bool false && killall Finder"

# Reload the shell (i.e. invoke as a login shell)
alias reload="exec $SHELL -l"

# Move files/folder with interactive mode to default
alias move="mv -i"

# Lock screen while away
alias afk='/System/Library/CoreServices/"Menu Extras"/User.menu/Contents/Resources/CGSession -suspend'

# Print each PATH entry on a separate line
alias path='echo -e ${PATH//:/\\n}'

# Get week number
alias week='date +%V'

# Kill all NodeJS Process
alias killnode='killall node'

# Open atom with add
alias aatom='atom --add .'


# --------------------------------------------------
#
# Functions
#
# --------------------------------------------------

function fd() {
  # Find file by name
  find ./ -type f -name "*$@*"
}

function ff() {
  # Find directory by name
  find ./ -type d -name "*$@*"
}

function fs() {
  # List files/dirs sizes
  if du -b /dev/null > /dev/null 2>&1; then
    local arg=-sbh;
  else
    local arg=-sh;
  fi
  if [[ -n "$@" ]]; then
    du $arg -- "$@";
  else
    du $arg .[^.]* ./*;
  fi;
}

function gg() {
  # Open google search in default browser
  open /Applications/Opera.app/ "http://www.google.com/search?q=$1";
}

function mkd() {
  # Create a new directory and enter it
  mkdir -p "$@" && cd "$_";
}

function pack() {
  # Create a .tar.gz archive
  # using `zopfli`, `pigz` or `gzip` for compression
  local tmpFile="${@%/}.tar";
  tar -cvf "${tmpFile}" --exclude=".DS_Store" "${@}" || return 1;
  size=$(
    stat -f"%z" "${tmpFile}" 2> /dev/null; # OS X `stat`
    stat -c"%s" "${tmpFile}" 2> /dev/null # GNU `stat`
  );
  local cmd="";
  if (( size < 52428800 )) && hash zopfli 2> /dev/null; then
    # the .tar file is smaller than 50 MB and Zopfli is available; use it
    cmd="zopfli";
  else
    if hash pigz 2> /dev/null; then
      cmd="pigz";
    else
      cmd="gzip";
    fi;
  fi;

  echo "Compressing .tar using \`${cmd}\`â€¦";
  "${cmd}" -v "${tmpFile}" || return 1;
  [ -f "${tmpFile}" ] && rm "${tmpFile}";
  echo "${tmpFile}.gz created successfully.";
}

function tre() {
  # brew install https://raw.githubusercontent.com/icholy/ttygif/master/ttygif.rb
  #
  # `tre` is a shorthand for `tree` with hidden files and color enabled, ignoring
  # the `.git` directory, listing directories first. The output gets piped into
  #
  # `less` with options to preserve color and line numbers, unless the output is
  # small enough for one screen.
  tree -aC -I '.git|node_modules|bower_components' --dirsfirst "$@" | less -FRNX;
}

function wh() {
  # Show current location weather informations
  curl -s http://us.wttr.in/?lang=fr
}

# function loadDotenvFile() {
#   if [ -f $PWD/.env ] && [ $1 = true ];
#   then
#     # Load
#     export $(cat $PWD/.env | sed 's/#.*//g' | xargs)
#   else
#     # Unload
#     unset $(cat $PWD/.env | sed -E 's/(.*)=.*/\1/' | xargs)
#   fi
# }

[ -n "$PS1" ] && source ~/.bash_inc/.aliases_apache;
[ -n "$PS1" ] && source ~/.bash_inc/.aliases_docker;
[ -n "$PS1" ] && source ~/.bash_inc/.aliases_git;
[ -n "$PS1" ] && source ~/.bash_inc/.extras;
